name: Android Internal Test

on:
  push:
    branches:
      - condominiofacil

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > android/app/my-release-key.jks

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/853738758359/locations/global/workloadIdentityPools/github-pool-workflow/providers/github-provider'
          service_account: 'app-condominios@app-condominios-461012.iam.gserviceaccount.com'

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Increment Version Code
        run: |
          # Use GitHub Actions run number as versionCode
          NEW_VERSION=${{ github.run_number }}
          echo "New version code: $NEW_VERSION"

          # Update versionCode in build.gradle
          sed -i "s/versionCode [0-9]\+/versionCode $NEW_VERSION/" android/app/build.gradle

          # Atualiza versionName (opcional)
          CURRENT_VERSION_NAME=$(grep -oP 'versionName "\K[^"]+' android/app/build.gradle)
          echo "Current version name: $CURRENT_VERSION_NAME"

          # Extrai major.minor e incrementa patch
          if [[ $CURRENT_VERSION_NAME =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION_NAME="$MAJOR.$MINOR.$NEW_PATCH"
          else
            NEW_VERSION_NAME="1.0.$NEW_VERSION"
          fi

          echo "New version name: $NEW_VERSION_NAME"
          sed -i "s/versionName \"$CURRENT_VERSION_NAME\"/versionName \"$NEW_VERSION_NAME\"/" android/app/build.gradle

          # Atualiza app.json para manter consistência
          if [ -f "app.json" ]; then
            sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$NEW_VERSION_NAME\"/" app.json
            echo "Updated app.json version to: $NEW_VERSION_NAME"
          fi

          # Verifica mudanças
          echo "Updated build.gradle version info:"
          grep -E "(versionCode|versionName)" android/app/build.gradle

          if [ -f "app.json" ]; then
            echo "Updated app.json version:"
            grep -A 1 -B 1 "\"version\":" app.json
          fi

      - name: Build Release AAB
        run: cd android && ./gradlew bundleRelease
        env:
          MYAPP_UPLOAD_STORE_FILE: android/app/my-release-key.jks
          MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload to Google Play Internal Test
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ steps.auth.outputs.credentials_file_path }}
          packageName: br.com.condominio.facil
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: draft 

      - name: Commit version changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add android/app/build.gradle
          if [ -f "app.json" ]; then
            git add app.json
          fi
          git commit -m "Auto-increment version for build #${{ github.run_number }}" || exit 0
          git push 